<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dev_coffee.mapper.ProductMapper">



    <!-- 제품 정보를 ID로 조회 -->
    <select id="findById" parameterType="byte[]" resultType="com.example.dev_coffee.dto.ProductDTO">
        SELECT * FROM products WHERE product_id = #{productId}
    </select>

    <!-- 모든 제품 정보 조회 -->
    <select id="findAll" resultType="com.example.dev_coffee.dto.ProductDTO">
            SELECT
                product_id AS productId,
                product_name AS productName,
                category,
                price,
                description,
                created_at AS createdAt,
                updated_at AS updatedAt
            FROM products
    </select>

    <!-- 새로운 제품 정보 추가 -->
    <insert id="insert" parameterType="com.example.dev_coffee.dto.ProductDTO">
        INSERT INTO products (product_id, product_name, category, price, description, created_at, updated_at)
        VALUES (#{productId}, #{productName}, #{category}, #{price}, #{description}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- 제품 정보 업데이트 -->
    <update id="update" parameterType="com.example.dev_coffee.dto.ProductDTO">
        UPDATE products
        SET product_name = #{productName},
            category = #{category},
            price = #{price},
            description = #{description},
            updated_at = #{updatedAt}
        WHERE product_id = #{productId}
    </update>

    <!-- 제품 정보 삭제 -->
    <delete id="delete" parameterType="byte[]">
        DELETE FROM products WHERE product_id = #{productId, jdbcType=BINARY}
    </delete>


</mapper>
